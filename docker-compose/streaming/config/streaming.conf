enable = ${STREAMING_ENABLE}
chain_id = "${BLOCKCHAIN_NETWORK_ID}"

file_storage = {
  root = "${DATADIR}"
  ttl_secs = ${MESSAGES_TTL_SEC}
  pool_period_sec = 7200
  urls = [
    "http://${IPADDR}:${NODE_WEB_PORT}"
  ]
}

elliptic_signer = {
  private_key_hex = "${SIGNER_PRIVATE_KEY_HEX}"
}

kafka_topics = {
  blocks = {
    topic = "${BLOCKS_STREAMING_KAFKA_TOPIC}"
    enable = ${BLOCKS_STREAMING_ENABLE}
  }
  broadcasted = {
    topic = "${BROADCASTED_STREAMING_KAFKA_TOPIC}"
    enable = "${BROADCASTED_STREAMING_ENABLE}"
  }
}

kafka_broker = {
  bootstrap_servers = "${KAFKA_SERVERS}"
  security_protocol = "${KAFKA_SECURITY_PROTOCOL}"
  ssl_truststore_type = "PEM"
  ssl_truststore_location = "/app/config/ssl/server.cer.pem"
  ssl_keystore_type = "PEM"
  ssl_keystore_location = "/app/config/ssl/client.cer.pem"
  ssl_key_password = "123456"
  ssl_endpoint_identification_algorithm = ""
  allow_auto_create_topics = false
}

path_generator = {
  bucket_size = 1000
  block_number_padding = 12
  spacer = "0"
  suffix = "${PATH_GENERATOR_SUFFIX}"
}
